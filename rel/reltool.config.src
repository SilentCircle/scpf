{sys, [
       {lib_dirs, ["../deps"]},
       {erts, [{mod_cond, all}, {app_file, strip}]},
       {app_file, strip},
       {rel, "scpf", {cmd, "echo `cat ../APP_VERSION`"},
        [
         kernel,
         stdlib,
         sasl,
         sc_push,
         gcm_erl,
         apns_erl,
         lager
        ]},
       {rel, "start_clean", "",
        [
         kernel,
         stdlib
        ]},
       {boot_rel, "scpf"},
       {profile, development},
       {incl_cond, derived},
       {mod_cond, all},
       {excl_archive_filters, [".*"]}, %% Do not archive built libs
       {excl_sys_filters, ["^bin/.*", "^erts.*/bin/(dialyzer|typer)",
                           "^erts.*/(doc|info|include|lib|man|src)"]},
       {excl_app_filters, ["\.gitignore"]},
       {app, sc_push, [{mod_cond, app}, {incl_cond, include}]}
      ]}.

{target_dir, "scpf"}.

{overlay_vars, "vars.config"}.

{overlay, [
           {mkdir, "log/sasl"},
           {mkdir, "etc/certs"},
           {copy, "files/erl", "{{erts_vsn}}/bin/erl"},
           {copy, "files/backup_database.escript", "bin/backup_database.escript"},
           {template, "files/app.config", "etc/app.config"},
           {template, "files/nodetool", "{{erts_vsn}}/bin/nodetool"},
           {template, "files/mnesia_init.escript", "bin/mnesia_init"},
           {template, "files/scpf", "bin/scpf"},
           {template, "files/vm.args", "etc/vm.args"}
          ]}.

