%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et

%% SCPF now relies on Erlang 18.0 or later
{minimum_otp_vsn, "18.3"}.

{erl_opts, [
            %% Erlang releases after 17 don't put R in front of their name, and
            %% also require dict() to be written like dict:dict()
            {platform_define, "^[0-9]+", namespaced_dicts},
            debug_info,
            export_all,
            report,
            warnings_as_errors,
            {src_dirs, ["src"]},
            {parse_transform, lager_transform}
           ]}.

{lager_extra_sinks, [sentry]}.

{edoc_opts, [{doclet, edown_doclet},
             {source_path, [
                            "_build/default/lib/sc_push/src",
                            "_build/default/lib/sc_push_lib/src",
                            "_build/default/lib/apns_erlv3/src",
                            "_build/default/lib/apns_erl_util/src",
                            "_build/default/lib/gcm_erl/src",
                            "_build/default/lib/sc_util/src"
                           ]},
             {stylesheet, ""},
             {image, ""},
             {app_default, "http://www.erlang.org/doc/man"},
             {edown_target, github},
             {top_level_readme,
              {"./README.md", "http://github.com/SilentCircle/scpf"}}
            ]}.

{ct_opts, [{spec, "scpf.test.spec"}]}.

{pre_hooks, [
             {ct, "./pre_common_test_hook.sh"},
	         {edoc, "sed -r -f markedoc.sed	doc/README-src.md > doc/overview.edoc"}
            ]}.

{post_hooks, [
              {compile, "sh -c './manifest.sh > MANIFEST'"}
             ]}.

{shell, [{config, "config/shell.config"},
         {script_file, "files/mnesia_init.erl"}
        ]
}.

{cover_opts, [verbose, {level, details}]}.
{cover_enabled, true}.

{dialyzer, [
            %{warnings, [unknown]},
            {get_warnings, true},
            {plt_apps, top_level_deps} % top_level_deps | all_deps
           ]}.

{deps, [
        {sc_push_lib, ".*",
         %{git, "https://github.com/SilentCircle/sc_push_lib.git", {branch, "master"}}},
         {git, "https://github.com/SilentCircle/sc_push_lib.git", {branch, "feature/add-postgresql-support"}}},
        {sc_push, ".*",
         %{git, "https://github.com/SilentCircle/sc_push.git", {branch, "master"}}},
         {git, "https://github.com/SilentCircle/sc_push.git", {branch, "feature/add-postgresql-support"}}},
        {apns_erlv3, ".*",
         {git, "https://github.com/SilentCircle/apns_erlv3.git", {branch, "master"}}},
        {gcm_erl, ".*",
         {git, "https://github.com/SilentCircle/gcm_erl.git", {branch, "master"}}}
       ]
}.

%% The default release is the same as a dev release.
%% To generate a production release:
%%
%% ./rebar3 as prod release
%%
{relx, [{release, {scpf, {cmd, "./scpf_version.sh"}}, [scpf]},
        {dev_mode, true},
        {include_erts, true},
        {include_src, false},

        {extended_start_script, true},

        {overlay_vars, "overlay/dev.vars.config"},
        {overlay, [
                   {mkdir,    "log/sasl"},
                   {mkdir,    "db"},
                   {template, "config/dev.sys.config", "sys.config"},
                   {template, "config/dev.vm.args", "vm.args"}
                  ]}
       ]
}.

{profiles,
 [
  {prod, [{relx, [{dev_mode, false},
                  {include_erts, true},
                  {overlay_vars, "overlay/vars.config"},
                  {overlay, [
                             {mkdir,    "log/sasl"},
                             {mkdir,    "db"},
                             {copy,     "files/backup_database.escript", "bin/backup_database.escript"},
                             {copy,     "files/nodetool", "bin/nodetool"},
                             {template, "files/scpf.src", "bin/scpf"},
                             {template, "config/sys.config", "releases/{{release_version}}/sys.config"},
                             {template, "config/vm.args", "releases/{{release_version}}/vm.args"}
                            ]
                  }
                 ]
          }]
  },
  {dev, [{relx, []}]},
  {test, [
          {erl_opts, [
                      debug_info,
                      export_all,
                      {i, ["include"]},
                      {parse_transform, lager_transform}
                     ]},
          {deps,
           [
            {mustache, ".*",
             {git, "https://github.com/mojombo/mustache.erl.git", {branch, "master"}}},
            {apns_erl_sim, ".*",
             {git, "https://github.com/SilentCircle/apns_erl_sim.git", {branch, "master"}}},
            {gcm_sim, ".*",
             {git, "https://github.com/SilentCircle/gcm_sim.git", {branch, "master"}}}
           ]}
         ]
  },
  {shell, [
           {erl_opts, [{i, ["include"]}]},
           {deps,
            [
             {apns_erl_sim, ".*",
              {git, "https://github.com/SilentCircle/apns_erl_sim.git", {branch, "master"}}},
             {gcm_sim, ".*",
              {git, "https://github.com/SilentCircle/gcm_sim.git", {branch, "master"}}}
            ]}
          ]
  }
 ]
}.

