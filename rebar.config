%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et

{sub_dirs, ["src", "rel"]}.

{erl_opts, [
        %% Erlang releases after 17 don't put R in front of their name, and
        %% also require dict() to be written like dict:dict()
        {platform_define, "^[0-9]+", namespaced_dicts},
        debug_info,
        export_all,
        report,
        warnings_as_errors,
        {src_dirs, ["src"]},
        {parse_transform, lager_transform}
    ]}.

{pre_hooks, [{compile, "sh -c 'if test -f deps/parse_trans/Makefile; then make -C deps/parse_trans; fi'"}]}.
{post_hooks, [
              {compile, "sh -c './manifest.sh > MANIFEST'"},
              {clean, "sh -c 'if test -f deps/parse_trans/Makefile; then make -C deps/parse_trans clean; fi'"}
             ]}.

{ct_dir, "test"}.
{ct_extra_params, ""}.
{ct_use_short_names, true}.

%% Without this, deps don't get cleaned.
{recursive_cmds, [clean]}.

{deps_dir, "deps"}.

{deps, [
        {lager, ".*",
            {git, "git@github.com:basho/lager.git", {branch, "master"}}},
        {sc_push_lib, ".*",
            {git, "git@github.com:SilentCircle/sc_push_lib.git", {branch, "master"}}},
        {sc_push, ".*",
            {git, "git@github.com:SilentCircle/sc_push.git", {branch, "master"}}},
        {apns_erl, ".*",
            {git, "git@github.com:SilentCircle/apns_erl.git", {branch, "master"}}},
        {gcm_erl, ".*",
            {git, "git@github.com:SilentCircle/gcm_erl.git", {branch, "master"}}},
        {rebar_lock_deps_plugin, ".*",
            {git, "git://github.com/seth/rebar_lock_deps_plugin.git", {branch, "master"}}},
        {parse_trans, ".*",
            {git, "git@github.com:uwiger/parse_trans.git", {branch, "master"}}}
    ]
}.

{plugins, [rebar_lock_deps_plugin]}.

